package edsdk;
import com.sun.jna.NativeLong;
import com.sun.jna.Structure;
/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.free.fr/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class EdsDeviceInfo extends Structure {
	/// C type : EdsChar[256]
	public byte[] szPortName = new byte[(256)];
	/// C type : EdsChar[256]
	public byte[] szDeviceDescription = new byte[(256)];
	/// C type : EdsUInt32
	public NativeLong deviceSubType;
	/// C type : EdsUInt32
	public NativeLong reserved;
	public EdsDeviceInfo() {
		super();
	}
	/**
	 * @param szPortName C type : EdsChar[256]<br>
	 * @param szDeviceDescription C type : EdsChar[256]<br>
	 * @param deviceSubType C type : EdsUInt32<br>
	 * @param reserved C type : EdsUInt32
	 */
	public EdsDeviceInfo(byte szPortName[], byte szDeviceDescription[], NativeLong deviceSubType, NativeLong reserved) {
		super();
		if (szPortName.length != this.szPortName.length) 
			throw new java.lang.IllegalArgumentException("Wrong array size !");
		this.szPortName = szPortName;
		if (szDeviceDescription.length != this.szDeviceDescription.length) 
			throw new java.lang.IllegalArgumentException("Wrong array size !");
		this.szDeviceDescription = szDeviceDescription;
		this.deviceSubType = deviceSubType;
		this.reserved = reserved;
	}
	protected ByReference newByReference() {
		ByReference s = new ByReference();
		s.useMemory(getPointer());
		write();
		s.read();
		return s;
	}
	protected ByValue newByValue() {
		ByValue s = new ByValue();
		s.useMemory(getPointer());
		write();
		s.read();
		return s;
	}
	protected EdsDeviceInfo newInstance() {
		EdsDeviceInfo s = new EdsDeviceInfo();
		s.useMemory(getPointer());
		write();
		s.read();
		return s;
	}
	public static class ByReference extends EdsDeviceInfo implements Structure.ByReference {
		
	};
	public static class ByValue extends EdsDeviceInfo implements Structure.ByValue {
		
	};
}
